# Assumes the Fib # to compute is a command line arg, thus
# is on the top of the stack

CALL fib
PT r1
HALT

fib:
	PICK r2, 1 # get argument off stack

	# we will be trashing these
	# Do not need to push r2 as it is not used again
	PUSH r3
	PUSH r4

	# check for base cases
	JE base, r2, 0
	JE base, r2, 1

	MOV r3, r2 # copy arg

	# lhs
	SUB r3, 1
	PUSH r3
	CALL fib
	DROP
	MOV r4, r1 # lhs result in r4

	# rhs
	SUB r3, 1
	PUSH r3
	CALL fib
	DROP
	ADD r1, r4

	JMP done
base:
	MOV r1, r2 # in base cases, return argument

done:
	# restore regs
	POP r4
	POP r3

	RET # return result of the above addition in r1
